name: autopublish

on:
  schedule:
    - cron: '0 */2 * * *'   # Запуск каждые 2 часа UTC
  workflow_dispatch:        # Возможность запустить вручную

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ── 1. Checkout репозитория, используя PAT_TOKEN ─────────────────────────
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      # ── 2. Устанавливаем Python 3.11 ────────────────────────────────────────
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ── 3. Устанавливаем зависимости ───────────────────────────────────────
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ── 4. Собираем идеи через TrendScout ───────────────────────────────────
      - name: Run TrendScout (collect ideas)
        run: python scripts/trendscout.py

      # ── 5. Генерируем контент через ContentForge ─────────────────────────────
      - name: Run ContentForge (generate posts)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python scripts/contentforge.py

      # ── 6. Commit & Push новых статей, используя PAT_TOKEN в URL ─────────────
      - name: Commit & Push generated posts
        env:
          PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name 'auto-bot'
          git config user.email 'bot@example.com'

          # Имя основной ветки (замените main→master, если нужна master)
          BRANCH=main

          # Переключаемся на ветку и подтягиваем последние изменения
          git checkout $BRANCH
          git pull origin $BRANCH

          # Добавляем сгенерированные файлы
          git add website/content/posts

          # Если есть staged-изменения — создаём коммит
          git diff --cached --quiet || git commit -m "auto: new posts $(date -u +'%Y-%m-%dT%H:%M:%SZ')"

          # Пушим изменения, указывая PAT прямо в URL (в логах будет скрыто: x-access-token:***)
          git push https://x-access-token:${PAT}@github.com/Pollo8/auto-publisher.git $BRANCH

      # ── 7. (Опционально) Уведомляем Cloudflare Worker о новых статьях ────────
      - name: Notify Cloudflare Worker
        run: |
          for file in website/content/posts/*.md; do
            title=$(grep '^title:' "$file" | head -1 | cut -d '"' -f2)
            slug=$(basename "$file" .md)
            url="https://Pollo8.github.io/auto-publisher/${slug}"
            curl -X POST https://<ВАШ_WORKER_URL> \
                 -H "Content-Type: application/json" \
                 -d "{\"title\":\"$title\",\"url\":\"$url\"}"
          done
